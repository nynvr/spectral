services:

  db_svc:
    container_name: spectral_db
    image: postgres:17.2-alpine
    networks:
      - app_network
    environment:
      - POSTGRES_DB=db_name
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=db_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx_svc:
    container_name: spectral_nginx
    build:
      context: .
      dockerfile: ./deploy/nginx/nginx.development.Dockerfile
    ports:
      - "80:80"
      - "81:81"
    networks:
      - app_network
    depends_on:
      - api_svc
      - web_svc

  api_svc:
    container_name: spectral_api
    build:
      context: .
      dockerfile: ./deploy/api/api.development.Dockerfile
    networks:
      - app_network
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - DEBUG=True
      - SECRET_KEY=development-django-secret
      - ALLOWED_HOSTS=*
      - DB_HOST=db_svc
      - DB_PORT=5432
      - DB_NAME=db_name
      - DB_USER=db_user
      - DB_PASSWORD=db_pass
    depends_on:
      - db_svc
    volumes:
      - django_static_data:/app/staticfiles
      - django_media_data:/app/mediafiles
      - ./apps/api/app:/app

  web_svc:
    container_name: spectral_web
    build:
      context: .
      dockerfile: ./deploy/web/web.development.Dockerfile
    networks:
      - app_network
    environment:
      - NODE_ENV=development
    depends_on:
      - api_svc
    volumes:
      - ./apps/web/app:/app
      - /app/node_modules
      - /app/.next

volumes:
  postgres_data:
  django_static_data:
  django_media_data:

networks:
  app_network:
    driver: bridge